---
name: Build & Deploy
on:
    push:
        branches:
            - master
    workflow_dispatch:
    pull_request:
        branches:
            - master
        types: [opened, synchronize]
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checking out the repository
              uses: hipagesgroup/actions/checkout@master
            - name: Set up Python 3.9
              uses: hipagesgroup/actions/install-dependencies@master
              with:
                  language: Python
                  version: 3.9
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
            - name: Lint with flake8
              run: |
                  # exit-zero treats all errors as warnings. The GitHub editor is 88 chars wide
                  flake8 . --count --statistics
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checking out the repository
              uses: hipagesgroup/actions/checkout@master
            - name: Set up Python
              uses: hipagesgroup/actions/install-dependencies@master
              with:
                  language: Python
                  version: 3.9
            - name: Install Poetry
              uses: snok/install-poetry@v1
            - name: Install dependencies
              run: poetry install --no-dev
            - name: Test with pytest
              run: |
                  poetry run pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html --cov-fail-under=80 --suppress-no-test-exit-code
                  poetry run coverage xml -i
                  cp -f coverage.xml coverage/
            - uses: hipagesgroup/actions/coverage@master
              with:
                  coverage_dir: coverage/
    scan:
        name: Run Code Quality Scan üîç
        runs-on: ubuntu-latest
        needs: [lint, test]
        timeout-minutes: 10
        steps:
            - name: Checkout
              uses: hipagesgroup/actions/checkout@master
              with:
                  fetch-depth: 0

            - name: Run code quality scanner
              uses: hipagesgroup/actions/code-quality@master
              with:
                  wait: ${{ github.ref_name == 'master' && true || false }}
                  coverage_dir: coverage
                  sonar_token: ${{ secrets.SONAR_TOKEN }}
                  github_token: ${{ secrets.GITHUB_TOKEN }}

    deploy:
        if: github.ref_name == 'master'
        needs: [lint, test, scan]
        name: Publish and build pypi package
        runs-on: ubuntu-latest
        steps:
            - name: Checking out the repository
              uses: hipagesgroup/actions/checkout@master
            - name: Set up Python
              uses: hipagesgroup/actions/install-dependencies@master
              with:
                  language: Python
                  version: 3.9
            - name: Install Poetry
              uses: snok/install-poetry@v1
            - name: Install dependencies
              run: poetry install --no-dev
            - name: Build and publish to pypi
              env:
                  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN_DATA_ML_UTILS }}
              run: |
                  poetry config pypi-token.pypi $PYPI_TOKEN
                  poetry publish --build
